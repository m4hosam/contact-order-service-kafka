version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=LOCAL://kafka:9093,REMOTE://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LOCAL:PLAINTEXT,REMOTE:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=LOCAL://localhost:9093,REMOTE://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_INTER_BROKER_LISTENER_NAME=REMOTE
    depends_on:
      - zookeeper
  mongodb:
    image: 'bitnami/mongodb:latest'
    ports:
      - "27017:27017"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
  postgres:
    image: 'postgres:latest'
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=m4hosam
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=orders
  contactservice:
    build: ./contactservice  
    command: ["--kafka.bootstrapServer=kafka:9092", "--spring.data.mongodb.host=mongodb", "--spring.data.mongodb.port=27017"]
    ports:
      - 8080:8080
    depends_on:
      - zookeeper
      - kafka
      - mongodb

  orderservice:
    build:
      context: ./orderservice  # Update this path to the location of your order service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://m4hosam:password@postgres:5432/orders
      - CONTACT_SERVICE_URL=http://contactservice:8080/api/v1/person
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - postgres
      - kafka
      - contactservice

